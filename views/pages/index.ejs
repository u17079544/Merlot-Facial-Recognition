<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
  <style type="text/css">
		body {
			margin: 0px;
			padding: 0xp;
			font-family: sans-serif;
			background-color: whitesmoke;
		}
		.preview {
			width: 70vw;
			height: 150px;
			overflow-y: scroll;
		}
		#register {
			padding: 10px;
			width: 96vw;
			height: 80vh;
			border-bottom: 3px solid #0b999a;
		}
		#authenticate {
			padding: 10px;
			width: 96vw;
			height: 70vh;	
		}
		.fnb-navbar {
			width: 98vw;
			height: 60px;
			background-color: white;
			box-shadow: 0 8px 6px -6px grey;
		}
		.fnb-image {
			padding-left: 10px;
			width: 100px;
			height: 55px;
			float: left;
		}
		.fnb-head {
			/*width: 100px;*/
			height: 55px;
			float: left;
			padding-left: 10px;	
			padding-top: 10px;
			color: #0b999a;
		}
		.fnb-head h1 {
			margin: 0px;
		}
		.result-box {
			background-color: white;
			border-radius: 0.3em;
			width: 50vw;
			height: 100px;
			border: 1px solid lightgrey;
			overflow-y: scroll;
			word-wrap: break-word;
			padding: 5px;
		}
		.server-pos {
			padding: 20px;
			float: right;
		}
	</style>
</head>

<body>

  <% include ../partials/nav.ejs %>
  
	<div class="fnb-navbar">
		<div class="fnb-image">
			<img src="https://seeklogo.com/images/F/fnb-logo-E570AEBCE1-seeklogo.com.png" height="50px" width="100px">
		</div>
		<div class="fnb-head"><h1>Facial Recognition System</h1></div>	
		<div class="server-pos">
			<label for="server">Server:</label>
			<select id="server" name="server">
				<option value="http://127.0.0.1:3000">http://127.0.0.1:3000</option>
				<option value="https://merlot-facial-recognition.herokuapp.com/">https://merlot-facial-recognition.herokuapp.com/</option>
			</select>
		</div>
	</div>
	
	<div id="register">
		<h2>Register User</h2>
		<form>
			<label for="client_id">Client ID:</label>
			<input type="text" name="client_id"></br></br>
			<label for="images">Upload Images:</label>
			<input type="file" name="images" onchange="previewFiles()" multiple>
			<div class="preview" id="preview"></div>
			<input style='background-color: #45BFAA; border: none; padding: 10px; width: 54%;' type="button" id="Upload1" name="Upload" value="Upload" onclick="sendRegister()">
		</form>
		<br/><br/>
		<h3>Result</h3>
		<div class="result-box" id="r_result">
			
		</div>
	</div>
	<div id="authenticate">
		<h2>Authenticate User</h2>
		<form>
			<label for="images">Upload Image:</label>
			<input type="file" name="images" onchange="previewFile()"><br/><br/>
			<div class="preview" id="preview1"></div>
			<input style='display: none; background-color: #45BFAA; border: none; padding: 10px; width: 54%;' id="Upload2" type="button" name="Upload" value="Upload" onclick="sendAuthentication()">
		</form>
		<br/><br/>
		<h3>Result</h3>
		<div class="result-box" id="a_result">
			
		</div>
	</div>

	<script type="text/javascript">
		//<!-- script for uploading -->
		var json_r_request = {};
		var base64List = [];
		var json_a_request = {};
		var base64Image = '';
		
		function previewFiles() {

  			var preview = document.querySelector('#preview');
  			var files   = document.querySelector('input[type=file]').files;
  			
  			//var json_request = {};

  			function readAndPreview(file) {

    			// Make sure `file.name` matches our extensions criteria
    			if ( /\.(jpe?g|png|gif)$/i.test(file.name) ) {
      				var reader = new FileReader();

      				reader.addEventListener("load", function () {
        				var image = new Image();
        				var strImage = '';
        				image.height = 100;
        				image.title = file.name;
        				image.src = this.result;
        				strImage += this.result;
        				base64List.push(strImage);
        				preview.appendChild( image );
      				}, false);

      				reader.readAsDataURL(file);
    			}

  			}
			
			document.getElementById("Upload1").style.display = "block";
			document.getElementById("Upload2").style.display = "block";

  			if (files) {
    			[].forEach.call(files, readAndPreview);
  			}	

  			
		}

		// function showRegister() {
		// 	json_r_request.type = "register";
  // 			json_r_request.client_id = document.getElementsByName('client_id')[0].value;
  // 			json_r_request.images = base64List;
  // 			//send via ajax
  // 			document.getElementById('r_result').innerHTML = JSON.stringify(json_r_request);
		// }

		function previewFile() {
  			var preview = document.querySelector('#preview1');
 			var file    = document.querySelectorAll('input[type=file]')[1].files[0];
 			//var json_request = {};

  			function readAndPreview(file) {

    			// Make sure `file.name` matches our extensions criteria
    			if ( /\.(jpe?g|png|gif)$/i.test(file.name) ) {
      				var reader = new FileReader();

      				reader.addEventListener("load", function () {
        				var image = new Image();
        				image.height = 100;
        				image.title = file.name;
        				image.src = this.result;
        				base64Image = this.result;
        				preview.appendChild( image );
      				}, false);

      				reader.readAsDataURL(file);
    			}

  			}
			
			document.getElementById("Upload1").style.display = "block";
			document.getElementById("Upload2").style.display = "block";
  			
  			//send via ajax
  			readAndPreview(file);
		}	

		// function showAuthentication() {
		// 	json_a_request.type = "authenticate";
  // 			json_a_request.image = base64Image;
  // 			document.getElementById('a_result').innerHTML = JSON.stringify(json_a_request);
		// }	


		function postAjax(url, data, success) {
    		var params = typeof data == 'string' ? data : Object.keys(data).map(
            function (k) { return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }
        	).join('&');

    		var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
    		xhr.open('POST', url);
    		xhr.onreadystatechange = function() {
        		if (xhr.readyState>3 && xhr.status==200) { 
        			success(xhr.responseText); 
        		}
    		};
    		xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    		xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
   			xhr.send(params);
    		return xhr;
		}

		function sendAuthentication() {
			var e = document.getElementById("server");
			var strUrl = e.options[e.selectedIndex].value;
			var url = strUrl;
			json_a_request.type = "authenticate";
  			json_a_request.image = base64Image;
			postAjax(url, json_a_request, (data) => { 
				document.getElementById('a_result').innerHTML = data; 
			});	
		}

		function sendRegister() {
			var e = document.getElementById("server");
			var strUrl = e.options[e.selectedIndex].value;
			var url = strUrl;
			json_r_request.type = "update";
  			json_r_request.client_id = document.getElementsByName('client_id')[0].value;
  			json_r_request.images = base64List;
			postAjax(url, json_r_request, (data) => { 
				document.getElementById('a_result').innerHTML = data; 
			});
		}
	</script>
</body>
</html>
